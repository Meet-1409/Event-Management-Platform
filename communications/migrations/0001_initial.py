# Generated by Django 4.2.7 on 2025-06-29 11:59

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_type', models.CharField(choices=[('text', 'Text'), ('image', 'Image'), ('file', 'File'), ('system', 'System')], default='text', max_length=20)),
                ('content', models.TextField()),
                ('attachment', models.FileField(blank=True, null=True, upload_to='chat_attachments/')),
                ('attachment_name', models.CharField(blank=True, max_length=255)),
                ('is_edited', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'chat_messages',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='ChatRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_id', models.CharField(blank=True, max_length=50, unique=True)),
                ('name', models.CharField(max_length=200)),
                ('chat_type', models.CharField(choices=[('event', 'Event Chat'), ('team', 'Team Chat'), ('support', 'Support Chat'), ('general', 'General Chat')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('is_private', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'chat_rooms',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ChatRoomMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('member', 'Member'), ('moderator', 'Moderator'), ('admin', 'Admin')], default='member', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('last_seen', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'chat_room_members',
            },
        ),
        migrations.CreateModel(
            name='Consultation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('consultation_id', models.CharField(blank=True, max_length=50, unique=True)),
                ('consultation_type', models.CharField(choices=[('phone', 'Phone Call'), ('video', 'Video Call'), ('in_person', 'In Person'), ('chat', 'Chat'), ('email', 'Email')], max_length=20)),
                ('status', models.CharField(choices=[('requested', 'Requested'), ('scheduled', 'Scheduled'), ('confirmed', 'Confirmed'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('no_show', 'No Show')], default='requested', max_length=20)),
                ('requested_date', models.DateTimeField()),
                ('scheduled_date', models.DateTimeField(blank=True, null=True)),
                ('duration_minutes', models.PositiveIntegerField(default=30)),
                ('event_type', models.CharField(blank=True, max_length=100)),
                ('expected_guests', models.PositiveIntegerField(blank=True, null=True)),
                ('budget_range', models.CharField(blank=True, max_length=50)),
                ('topic', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('specific_questions', models.TextField(blank=True)),
                ('meeting_link', models.URLField(blank=True)),
                ('meeting_location', models.CharField(blank=True, max_length=255)),
                ('meeting_notes', models.TextField(blank=True)),
                ('consultation_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('is_paid', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'consultations',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ConsultationNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=200)),
                ('content', models.TextField()),
                ('note_type', models.CharField(choices=[('general', 'General'), ('action_items', 'Action Items'), ('follow_up', 'Follow Up'), ('recommendations', 'Recommendations'), ('budget', 'Budget'), ('timeline', 'Timeline')], default='general', max_length=20)),
                ('is_private', models.BooleanField(default=False)),
                ('is_important', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'consultation_notes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('conversation_id', models.CharField(blank=True, max_length=50, unique=True)),
                ('conversation_type', models.CharField(choices=[('user_manager', 'User-Manager'), ('user_vendor', 'User-Vendor'), ('manager_vendor', 'Manager-Vendor'), ('admin_user', 'Admin-User'), ('admin_manager', 'Admin-Manager'), ('admin_vendor', 'Admin-Vendor')], max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('is_archived', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_message_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'conversations',
                'ordering': ['-last_message_at', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_id', models.CharField(blank=True, max_length=50, unique=True)),
                ('message_type', models.CharField(choices=[('text', 'Text'), ('image', 'Image'), ('file', 'File'), ('system', 'System'), ('notification', 'Notification')], default='text', max_length=20)),
                ('content', models.TextField()),
                ('attachment', models.FileField(blank=True, null=True, upload_to='message_attachments/')),
                ('attachment_name', models.CharField(blank=True, max_length=255)),
                ('attachment_size', models.PositiveIntegerField(blank=True, null=True)),
                ('is_read', models.BooleanField(default=False)),
                ('is_delivered', models.BooleanField(default=False)),
                ('is_edited', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'messages',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='NotificationTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('notification_type', models.CharField(choices=[('message', 'New Message'), ('consultation', 'Consultation Update'), ('event', 'Event Update'), ('payment', 'Payment Update'), ('booking', 'Booking Update'), ('system', 'System Notification'), ('reminder', 'Reminder')], max_length=20)),
                ('title_template', models.CharField(max_length=200)),
                ('message_template', models.TextField()),
                ('send_email', models.BooleanField(default=True)),
                ('send_sms', models.BooleanField(default=False)),
                ('send_push', models.BooleanField(default=True)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=10)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'notification_templates',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_id', models.CharField(blank=True, max_length=50, unique=True)),
                ('notification_type', models.CharField(choices=[('message', 'New Message'), ('consultation', 'Consultation Update'), ('event', 'Event Update'), ('payment', 'Payment Update'), ('booking', 'Booking Update'), ('system', 'System Notification'), ('reminder', 'Reminder')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=10)),
                ('action_url', models.URLField(blank=True)),
                ('action_text', models.CharField(blank=True, max_length=100)),
                ('is_read', models.BooleanField(default=False)),
                ('is_sent', models.BooleanField(default=False)),
                ('is_delivered', models.BooleanField(default=False)),
                ('email_sent', models.BooleanField(default=False)),
                ('sms_sent', models.BooleanField(default=False)),
                ('push_sent', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('related_consultation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='communications.consultation')),
                ('related_conversation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='communications.conversation')),
            ],
            options={
                'db_table': 'notifications',
                'ordering': ['-created_at'],
            },
        ),
    ]
