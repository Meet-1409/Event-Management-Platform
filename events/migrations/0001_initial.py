# Generated by Django 4.2.7 on 2025-06-29 11:59

from django.db import migrations, models
import django.db.models.deletion
import imagekit.models.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_id', models.CharField(blank=True, max_length=20, unique=True)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('expected_guests', models.PositiveIntegerField()),
                ('actual_guests', models.PositiveIntegerField(blank=True, null=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('pending', 'Pending Approval'), ('confirmed', 'Confirmed'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('postponed', 'Postponed')], default='draft', max_length=20)),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('partial', 'Partial Payment'), ('paid', 'Fully Paid'), ('refunded', 'Refunded'), ('failed', 'Payment Failed')], default='pending', max_length=20)),
                ('total_budget', models.DecimalField(decimal_places=2, max_digits=12)),
                ('venue_cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('vendor_costs', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('manager_fee', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_cost', models.DecimalField(decimal_places=2, max_digits=12)),
                ('theme', models.CharField(blank=True, max_length=100)),
                ('color_scheme', models.JSONField(blank=True, default=list)),
                ('special_requirements', models.TextField(blank=True)),
                ('dietary_restrictions', models.JSONField(blank=True, default=list)),
                ('setup_time', models.TimeField(blank=True, null=True)),
                ('cleanup_time', models.TimeField(blank=True, null=True)),
                ('setup_requirements', models.JSONField(blank=True, default=list)),
                ('event_image', imagekit.models.fields.ProcessedImageField(blank=True, null=True, upload_to='event_images/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'events',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EventBudget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=100)),
                ('item_name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('estimated_cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('actual_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('is_paid', models.BooleanField(default=False)),
                ('payment_date', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'event_budget',
                'ordering': ['category', 'item_name'],
            },
        ),
        migrations.CreateModel(
            name='EventChecklist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=20)),
                ('assigned_to', models.CharField(blank=True, max_length=100)),
                ('category', models.CharField(blank=True, max_length=50)),
                ('is_completed', models.BooleanField(default=False)),
                ('completed_date', models.DateTimeField(blank=True, null=True)),
                ('completed_by', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'event_checklist',
                'ordering': ['due_date', 'priority'],
            },
        ),
        migrations.CreateModel(
            name='EventDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('document_type', models.CharField(choices=[('contract', 'Contract'), ('invoice', 'Invoice'), ('receipt', 'Receipt'), ('permit', 'Permit'), ('insurance', 'Insurance'), ('floor_plan', 'Floor Plan'), ('menu', 'Menu'), ('timeline', 'Timeline'), ('guest_list', 'Guest List'), ('other', 'Other')], max_length=20)),
                ('file', models.FileField(upload_to='event_documents/')),
                ('description', models.TextField(blank=True)),
                ('file_size', models.PositiveIntegerField(blank=True, null=True)),
                ('file_type', models.CharField(blank=True, max_length=50)),
                ('is_public', models.BooleanField(default=False)),
                ('shared_with', models.JSONField(blank=True, default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'event_documents',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EventGuest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('is_primary_guest', models.BooleanField(default=False)),
                ('plus_ones', models.PositiveIntegerField(default=0)),
                ('dietary_restrictions', models.TextField(blank=True)),
                ('special_requirements', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('invited', 'Invited'), ('confirmed', 'Confirmed'), ('declined', 'Declined'), ('maybe', 'Maybe'), ('attended', 'Attended'), ('no_show', 'No Show')], default='invited', max_length=20)),
                ('rsvp_date', models.DateTimeField(blank=True, null=True)),
                ('attended', models.BooleanField(default=False)),
                ('table_number', models.PositiveIntegerField(blank=True, null=True)),
                ('seat_number', models.PositiveIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'event_guests',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='EventNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=200)),
                ('content', models.TextField()),
                ('note_type', models.CharField(choices=[('general', 'General'), ('logistics', 'Logistics'), ('vendor', 'Vendor'), ('guest', 'Guest'), ('financial', 'Financial'), ('emergency', 'Emergency')], default='general', max_length=20)),
                ('is_private', models.BooleanField(default=False)),
                ('is_important', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'event_notes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EventTimeline',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('duration_minutes', models.PositiveIntegerField(blank=True, null=True)),
                ('responsible_person', models.CharField(blank=True, max_length=100)),
                ('is_completed', models.BooleanField(default=False)),
                ('is_critical', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'event_timeline',
                'ordering': ['start_time'],
            },
        ),
        migrations.CreateModel(
            name='EventType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('icon', models.CharField(blank=True, max_length=50)),
                ('color', models.CharField(default='#007bff', max_length=7)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'event_types',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='EventVendor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vendor_type', models.CharField(choices=[('catering', 'Catering'), ('music', 'Music/DJ'), ('photography', 'Photography'), ('videography', 'Videography'), ('decor', 'Decoration'), ('transportation', 'Transportation'), ('entertainment', 'Entertainment'), ('security', 'Security'), ('cleaning', 'Cleaning'), ('other', 'Other')], max_length=20)),
                ('service_description', models.TextField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('is_confirmed', models.BooleanField(default=False)),
                ('is_paid', models.BooleanField(default=False)),
                ('special_requirements', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vendors', to='events.event')),
            ],
            options={
                'db_table': 'event_vendors',
            },
        ),
    ]
