# Generated by Django 4.2.7 on 2025-06-29 11:59

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields
import imagekit.models.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('events', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, max_length=200, unique=True)),
                ('vendor_id', models.CharField(blank=True, max_length=20, unique=True)),
                ('business_name', models.CharField(blank=True, max_length=200)),
                ('business_license', models.CharField(blank=True, max_length=100)),
                ('tax_id', models.CharField(blank=True, max_length=50)),
                ('years_in_business', models.PositiveIntegerField(default=0)),
                ('contact_person', models.CharField(max_length=100)),
                ('contact_phone', models.CharField(max_length=20)),
                ('contact_email', models.EmailField(max_length=254)),
                ('website', models.URLField(blank=True)),
                ('address', models.TextField()),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('country', django_countries.fields.CountryField(max_length=2)),
                ('postal_code', models.CharField(blank=True, max_length=20)),
                ('service_areas', models.JSONField(blank=True, default=list)),
                ('travel_radius', models.PositiveIntegerField(default=50)),
                ('description', models.TextField()),
                ('services', models.JSONField(blank=True, default=list)),
                ('pricing_info', models.JSONField(blank=True, default=dict)),
                ('minimum_order', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('availability_schedule', models.JSONField(blank=True, default=dict)),
                ('max_events_per_day', models.PositiveIntegerField(default=1)),
                ('is_available', models.BooleanField(default=True)),
                ('status', models.CharField(choices=[('pending', 'Pending Approval'), ('active', 'Active'), ('inactive', 'Inactive'), ('suspended', 'Suspended'), ('verified', 'Verified')], default='pending', max_length=20)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_featured', models.BooleanField(default=False)),
                ('verification_date', models.DateTimeField(blank=True, null=True)),
                ('total_events_served', models.PositiveIntegerField(default=0)),
                ('average_rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('total_reviews', models.PositiveIntegerField(default=0)),
                ('success_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('bio', models.TextField(blank=True)),
                ('profile_image', imagekit.models.fields.ProcessedImageField(blank=True, null=True, upload_to='vendor_profiles/')),
                ('featured_until', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'vendors',
                'ordering': ['-is_featured', '-average_rating', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='VendorCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('icon', models.CharField(blank=True, max_length=50)),
                ('color', models.CharField(default='#28a745', max_length=7)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'Vendor Categories',
                'db_table': 'vendor_categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='VendorPackage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('duration_hours', models.PositiveIntegerField(default=4)),
                ('max_guests', models.PositiveIntegerField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('inclusions', models.JSONField(blank=True, default=list)),
                ('exclusions', models.JSONField(blank=True, default=list)),
                ('is_active', models.BooleanField(default=True)),
                ('is_popular', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='packages', to='vendors.vendor')),
            ],
            options={
                'db_table': 'vendor_packages',
                'ordering': ['price'],
            },
        ),
        migrations.CreateModel(
            name='VendorImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', imagekit.models.fields.ProcessedImageField(upload_to='vendor_images/')),
                ('caption', models.CharField(blank=True, max_length=200)),
                ('is_primary', models.BooleanField(default=False)),
                ('order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='vendors.vendor')),
            ],
            options={
                'db_table': 'vendor_images',
                'ordering': ['order', '-is_primary', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='VendorDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('document_type', models.CharField(choices=[('license', 'Business License'), ('insurance', 'Insurance Certificate'), ('certification', 'Professional Certification'), ('portfolio', 'Portfolio'), ('reference', 'Reference Letter'), ('other', 'Other')], max_length=20)),
                ('file', models.FileField(upload_to='vendor_documents/')),
                ('description', models.TextField(blank=True)),
                ('file_size', models.PositiveIntegerField(blank=True, null=True)),
                ('file_type', models.CharField(blank=True, max_length=50)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('verification_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='vendors.vendor')),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_vendor_documents', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'vendor_documents',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='vendor',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vendors', to='vendors.vendorcategory'),
        ),
        migrations.AddField(
            model_name='vendor',
            name='verified_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_vendors', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='VendorSpecialization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('years_experience', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='specializations', to='vendors.vendor')),
            ],
            options={
                'db_table': 'vendor_specializations',
                'unique_together': {('vendor', 'name')},
            },
        ),
        migrations.CreateModel(
            name='VendorService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('price_type', models.CharField(choices=[('fixed', 'Fixed Price'), ('per_person', 'Per Person'), ('per_hour', 'Per Hour'), ('custom', 'Custom Quote')], default='fixed', max_length=20)),
                ('is_available', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vendor_services', to='vendors.vendor')),
            ],
            options={
                'db_table': 'vendor_services',
                'unique_together': {('vendor', 'name')},
            },
        ),
        migrations.CreateModel(
            name='VendorReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('title', models.CharField(blank=True, max_length=200)),
                ('review_text', models.TextField()),
                ('quality_rating', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('service_rating', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('value_rating', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('professionalism_rating', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('is_verified', models.BooleanField(default=False)),
                ('is_approved', models.BooleanField(default=True)),
                ('is_helpful', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vendor_reviews', to='events.event')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vendor_reviews', to=settings.AUTH_USER_MODEL)),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='vendors.vendor')),
            ],
            options={
                'db_table': 'vendor_reviews',
                'ordering': ['-created_at'],
                'unique_together': {('vendor', 'user', 'event')},
            },
        ),
        migrations.CreateModel(
            name='VendorAvailability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('is_available', models.BooleanField(default=True)),
                ('is_blocked', models.BooleanField(default=False)),
                ('block_reason', models.CharField(blank=True, max_length=200)),
                ('special_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='availability', to='vendors.vendor')),
            ],
            options={
                'db_table': 'vendor_availability',
                'ordering': ['date', 'start_time'],
                'unique_together': {('vendor', 'date', 'start_time')},
            },
        ),
    ]
