# Generated by Django 4.2.7 on 2025-06-29 11:59

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields
import imagekit.models.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('events', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Venue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, max_length=200, unique=True)),
                ('venue_id', models.CharField(blank=True, max_length=20, unique=True)),
                ('address', models.TextField()),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('country', django_countries.fields.CountryField(max_length=2)),
                ('postal_code', models.CharField(blank=True, max_length=20)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('capacity_min', models.PositiveIntegerField(default=1)),
                ('capacity_max', models.PositiveIntegerField()),
                ('area_sqft', models.PositiveIntegerField(blank=True, null=True)),
                ('ceiling_height', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('base_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('price_per_person', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('deposit_required', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('cancellation_policy', models.TextField(blank=True)),
                ('description', models.TextField()),
                ('features', models.JSONField(blank=True, default=list)),
                ('restrictions', models.JSONField(blank=True, default=list)),
                ('contact_person', models.CharField(blank=True, max_length=100)),
                ('contact_phone', models.CharField(blank=True, max_length=20)),
                ('contact_email', models.EmailField(blank=True, max_length=254)),
                ('website', models.URLField(blank=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('maintenance', 'Under Maintenance'), ('booked', 'Fully Booked'), ('featured', 'Featured')], default='active', max_length=20)),
                ('is_featured', models.BooleanField(default=False)),
                ('is_verified', models.BooleanField(default=False)),
                ('featured_until', models.DateTimeField(blank=True, null=True)),
                ('total_bookings', models.PositiveIntegerField(default=0)),
                ('average_rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('total_reviews', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'venues',
                'ordering': ['-is_featured', '-average_rating', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='VenueCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('icon', models.CharField(blank=True, max_length=50)),
                ('color', models.CharField(default='#007bff', max_length=7)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'Venue Categories',
                'db_table': 'venue_categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='VenuePackage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('duration_hours', models.PositiveIntegerField(default=4)),
                ('max_guests', models.PositiveIntegerField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('inclusions', models.JSONField(blank=True, default=list)),
                ('exclusions', models.JSONField(blank=True, default=list)),
                ('is_active', models.BooleanField(default=True)),
                ('is_popular', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('venue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='packages', to='venues.venue')),
            ],
            options={
                'db_table': 'venue_packages',
                'ordering': ['price'],
            },
        ),
        migrations.CreateModel(
            name='VenueImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', imagekit.models.fields.ProcessedImageField(upload_to='venue_images/')),
                ('caption', models.CharField(blank=True, max_length=200)),
                ('is_primary', models.BooleanField(default=False)),
                ('order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('venue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='venues.venue')),
            ],
            options={
                'db_table': 'venue_images',
                'ordering': ['order', '-is_primary', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Venue360Tour',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tour_id', models.CharField(blank=True, max_length=50, unique=True)),
                ('panorama_image', models.ImageField(upload_to='venue_tours/')),
                ('tour_config', models.JSONField(blank=True, default=dict)),
                ('hotspots', models.JSONField(blank=True, default=list)),
                ('navigation_points', models.JSONField(blank=True, default=list)),
                ('title', models.CharField(blank=True, max_length=200)),
                ('description', models.TextField(blank=True)),
                ('duration_minutes', models.PositiveIntegerField(default=5)),
                ('is_active', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('venue', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='tour', to='venues.venue')),
            ],
            options={
                'db_table': 'venue_360_tours',
            },
        ),
        migrations.AddField(
            model_name='venue',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='venues', to='venues.venuecategory'),
        ),
        migrations.CreateModel(
            name='VenueReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('title', models.CharField(blank=True, max_length=200)),
                ('review_text', models.TextField()),
                ('cleanliness_rating', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('service_rating', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('value_rating', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('location_rating', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('is_verified', models.BooleanField(default=False)),
                ('is_approved', models.BooleanField(default=True)),
                ('is_helpful', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='venue_reviews', to='events.event')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='venue_reviews', to=settings.AUTH_USER_MODEL)),
                ('venue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='venues.venue')),
            ],
            options={
                'db_table': 'venue_reviews',
                'ordering': ['-created_at'],
                'unique_together': {('venue', 'user', 'event')},
            },
        ),
        migrations.CreateModel(
            name='VenueFacility',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('icon', models.CharField(blank=True, max_length=50)),
                ('is_available', models.BooleanField(default=True)),
                ('additional_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('venue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='facilities', to='venues.venue')),
            ],
            options={
                'verbose_name_plural': 'Venue Facilities',
                'db_table': 'venue_facilities',
                'unique_together': {('venue', 'name')},
            },
        ),
        migrations.CreateModel(
            name='VenueAvailability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('is_available', models.BooleanField(default=True)),
                ('is_blocked', models.BooleanField(default=False)),
                ('block_reason', models.CharField(blank=True, max_length=200)),
                ('special_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('venue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='availability', to='venues.venue')),
            ],
            options={
                'db_table': 'venue_availability',
                'ordering': ['date', 'start_time'],
                'unique_together': {('venue', 'date', 'start_time')},
            },
        ),
    ]
