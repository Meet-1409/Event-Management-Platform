# Generated by Django 4.2.7 on 2025-06-29 11:59

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import imagekit.models.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('events', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='EventManager',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manager_id', models.CharField(blank=True, max_length=20, unique=True)),
                ('company_name', models.CharField(blank=True, max_length=200)),
                ('job_title', models.CharField(blank=True, max_length=100)),
                ('years_of_experience', models.PositiveIntegerField(default=0)),
                ('certifications', models.JSONField(blank=True, default=list)),
                ('awards', models.JSONField(blank=True, default=list)),
                ('resume', models.FileField(blank=True, upload_to='manager_resumes/')),
                ('portfolio', models.FileField(blank=True, upload_to='manager_portfolios/')),
                ('references', models.JSONField(blank=True, default=list)),
                ('business_license', models.CharField(blank=True, max_length=100)),
                ('insurance_info', models.JSONField(blank=True, default=dict)),
                ('tax_id', models.CharField(blank=True, max_length=50)),
                ('service_areas', models.JSONField(blank=True, default=list)),
                ('travel_radius', models.PositiveIntegerField(default=50)),
                ('hourly_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('package_pricing', models.JSONField(blank=True, default=dict)),
                ('consultation_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('availability_schedule', models.JSONField(blank=True, default=dict)),
                ('max_events_per_month', models.PositiveIntegerField(default=10)),
                ('is_available', models.BooleanField(default=True)),
                ('total_events_managed', models.PositiveIntegerField(default=0)),
                ('average_rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('total_reviews', models.PositiveIntegerField(default=0)),
                ('success_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('status', models.CharField(choices=[('pending', 'Pending Approval'), ('active', 'Active'), ('inactive', 'Inactive'), ('suspended', 'Suspended'), ('verified', 'Verified')], default='pending', max_length=20)),
                ('is_verified', models.BooleanField(default=False)),
                ('verification_date', models.DateTimeField(blank=True, null=True)),
                ('bio', models.TextField(blank=True)),
                ('profile_image', imagekit.models.fields.ProcessedImageField(blank=True, null=True, upload_to='manager_profiles/')),
                ('preferred_contact_method', models.CharField(choices=[('email', 'Email'), ('phone', 'Phone'), ('sms', 'SMS'), ('whatsapp', 'WhatsApp')], default='email', max_length=20)),
                ('featured', models.BooleanField(default=False)),
                ('featured_until', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'event_managers',
                'ordering': ['-featured', '-average_rating', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ManagerAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assignment_id', models.CharField(blank=True, max_length=50, unique=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('rejected', 'Rejected'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('event_type', models.CharField(blank=True, max_length=100)),
                ('expected_guests', models.PositiveIntegerField(blank=True, null=True)),
                ('budget_range', models.CharField(blank=True, max_length=50)),
                ('assignment_reason', models.TextField(blank=True)),
                ('special_requirements', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('accepted_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'manager_assignments',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ManagerAvailability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('is_available', models.BooleanField(default=True)),
                ('is_blocked', models.BooleanField(default=False)),
                ('block_reason', models.CharField(blank=True, max_length=200)),
                ('special_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'manager_availability',
                'ordering': ['date', 'start_time'],
            },
        ),
        migrations.CreateModel(
            name='ManagerDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('document_type', models.CharField(choices=[('license', 'Business License'), ('insurance', 'Insurance Certificate'), ('certification', 'Professional Certification'), ('portfolio', 'Portfolio'), ('resume', 'Resume'), ('reference', 'Reference Letter'), ('other', 'Other')], max_length=20)),
                ('file', models.FileField(upload_to='manager_documents/')),
                ('description', models.TextField(blank=True)),
                ('file_size', models.PositiveIntegerField(blank=True, null=True)),
                ('file_type', models.CharField(blank=True, max_length=50)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('verification_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'manager_documents',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ManagerNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=200)),
                ('content', models.TextField()),
                ('note_type', models.CharField(choices=[('general', 'General'), ('performance', 'Performance'), ('feedback', 'Feedback'), ('recommendation', 'Recommendation'), ('warning', 'Warning'), ('praise', 'Praise')], default='general', max_length=20)),
                ('is_private', models.BooleanField(default=False)),
                ('is_important', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'manager_notes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ManagerPackage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('duration_hours', models.PositiveIntegerField(default=4)),
                ('max_guests', models.PositiveIntegerField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('inclusions', models.JSONField(blank=True, default=list)),
                ('exclusions', models.JSONField(blank=True, default=list)),
                ('is_active', models.BooleanField(default=True)),
                ('is_popular', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'manager_packages',
                'ordering': ['price'],
            },
        ),
        migrations.CreateModel(
            name='ManagerSpecialization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('category', models.CharField(blank=True, max_length=50)),
                ('icon', models.CharField(blank=True, max_length=50)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'manager_specializations',
                'ordering': ['category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ManagerReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('title', models.CharField(blank=True, max_length=200)),
                ('review_text', models.TextField()),
                ('professionalism_rating', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('communication_rating', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('expertise_rating', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('value_rating', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('is_verified', models.BooleanField(default=False)),
                ('is_approved', models.BooleanField(default=True)),
                ('is_helpful', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='manager_reviews', to='events.event')),
                ('manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='managers.eventmanager')),
            ],
            options={
                'db_table': 'manager_reviews',
                'ordering': ['-created_at'],
            },
        ),
    ]
