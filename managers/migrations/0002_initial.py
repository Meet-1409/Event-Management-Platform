# Generated by Django 4.2.7 on 2025-06-29 11:59

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('managers', '0001_initial'),
        ('events', '0002_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='managerreview',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='manager_reviews', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='managerpackage',
            name='manager',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='packages', to='managers.eventmanager'),
        ),
        migrations.AddField(
            model_name='managernote',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='manager_notes', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='managernote',
            name='manager',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='managers.eventmanager'),
        ),
        migrations.AddField(
            model_name='managerdocument',
            name='manager',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='managers.eventmanager'),
        ),
        migrations.AddField(
            model_name='managerdocument',
            name='verified_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_manager_documents', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='manageravailability',
            name='manager',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='availability', to='managers.eventmanager'),
        ),
        migrations.AddField(
            model_name='managerassignment',
            name='assigned_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_managers', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='managerassignment',
            name='event',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='manager_assignments', to='events.event'),
        ),
        migrations.AddField(
            model_name='managerassignment',
            name='manager',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='managers.eventmanager'),
        ),
        migrations.AddField(
            model_name='managerassignment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='manager_assignments', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='eventmanager',
            name='specializations',
            field=models.ManyToManyField(blank=True, related_name='managers', to='managers.managerspecialization'),
        ),
        migrations.AddField(
            model_name='eventmanager',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='event_manager_profile', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='eventmanager',
            name='verified_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_event_managers', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='managerreview',
            unique_together={('manager', 'user', 'event')},
        ),
        migrations.AlterUniqueTogether(
            name='manageravailability',
            unique_together={('manager', 'date', 'start_time')},
        ),
    ]
